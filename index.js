const e=function(e){const t=e._SHFTJS||{};return["drags","drops"].forEach(e=>{t[e]||(t[e]=new WeakMap)}),e._SHFTJS=t}(window),t=["bubbles","cancelable","composed","detail","view","altKey","ctrlKey","metaKey","shiftKey","button","buttons","clientX","clientY","movementX","movementY","relatedTarget","screenX","screenY"];function n(e,n={}){const o={};return t.forEach(t=>{o[t]=e[t]}),Object.assign(o,n)}function o(e,t,n={}){const o=new MouseEvent(t,n);return o.shftTarget=e,e.dispatchEvent(o),o}const{drags:r,drops:a}=e;function s(e,t=0,n=1){return Math.max(t,Math.min(e,n))}function d(e,t){return!t||("string"==typeof t&&(t=[t]),t instanceof Array&&t.some(t=>e.matches(t)))}function c(t,n){const{drags:o,drops:r}=e;switch(n){case"drag":case"draggable":return o.has(t);case"drop":case"droppable":return r.has(t);default:return o.has(t)||r.has(t)}}function u(e,t){const{accepts:n,overlap:o}=a.get(e);return d(t,n)&&function(e,t){const{left:n,right:o,top:r,bottom:a,height:d,width:c}=e.getBoundingClientRect(),{left:u,right:i,top:m,bottom:g}=t.getBoundingClientRect();return s(Math.min(o,i)-Math.max(n,u),0,c)*s(Math.min(a,g)-Math.max(r,m),0,d)/(c*d)}(t,e)>o}const{drags:i}=e;function m(e){return t=>{const{onmousemove:r,onmouseup:a}=i.get(e);1===t.buttons&&(o(e,"dragstart",n(t)),document.addEventListener("mousemove",r),document.addEventListener("mouseup",a,{once:!0}))}}function g(e){return t=>{o(e,"drag",n(t))}}function l(e){return t=>{const{onmousemove:r}=i.get(e);o(e,"dragend",n(t)),document.removeEventListener("mousemove",r)}}const{drops:v}=e;function p(e){return t=>{if(!v.has(e))return;const n=t.shftTarget,{accepts:r,ondrag:a,ondragend:s}=v.get(e);d(n,r)&&(o(e,"dropopen",{relatedTarget:n}),n.addEventListener("drag",a),n.addEventListener("dragend",s,{once:!0}))}}function f(e){return t=>{const r=t.shftTarget,{accepts:a,content:s}=v.get(e);d(r,a)&&(u(e,r)?(s.has(r)||(s.add(r),o(e,"dragenter",n(t,{relatedTarget:r}))),o(e,"dragover",n(t,{relatedTarget:r}))):s.has(r)&&(s.delete(r),o(e,"dragleave",n(t,{relatedTarget:r}))))}}function h(e){return t=>{const r=t.shftTarget,{ondrag:a}=v.get(e);o(e,"dropclose",n(t,{relatedTarget:r})),r.removeEventListener("drag",a),u(e,r)&&o(e,"drop",n(t,{relatedTarget:r}))}}var E={drag:function(e){if(c(e,"drag"))return;const t={onmousedown:m(e),onmousemove:g(e),onmouseup:l(e)};e.addEventListener("mousedown",t.onmousedown),i.set(e,t)},drop:function(e,t){if(c(e,"drop"))return;const{accepts:n,overlap:o}=Object.assign({accepts:null,overlap:.5},t||{}),r={content:new WeakSet,ondragstart:p(e),ondrag:f(e),ondragend:h(e),accepts:n,overlap:o};document.addEventListener("dragstart",r.ondragstart),v.set(e,r)},util:{clear:function(t){const{drags:n,drops:o}=e;if(n.has(t)){const{onmousedown:e,onmousemove:o,onmouseup:r}=n.get(t);t.removeEventListener("mousedown",e),document.removeEventListener("mousemove",o),document.removeEventListener("mouseup",r)}if(o.has(t)){const{ondragstart:e,ondrag:n,ondragend:r}=o.get(t);document.removeEventListener("dragstart",e),document.removeEventListener("drag",n),document.removeEventListener("dragend",r)}},defaultmove:function(e){const t=e.target;["absolute","relative"].some(e=>e===t.style.position)||(t.style.position="relative"),["left","top"].forEach(n=>{let o=parseFloat(t.style[n])||0;o+="left"===n?e.movementX:e.movementY,t.style[n]=o+"px"})},is:c,matches:d},_GLOBAL:e};export default E;
